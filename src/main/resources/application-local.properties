spring.jpa.database=POSTGRESQL
spring.datasource.driver-class-name=${DATASOURCE_DRIVER}
spring.jpa.database-platform=${JPA_DB_PLATFORM}
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username= ${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.jpa.properties.hibernate.dialect = ${HIBERNATE_DIALECT}
spring.jpa.show-sql=${SHOW_SQL}
spring.jpa.hibernate.ddl-auto=update

##JWT SECURITY
security.token.access.secret-key=${ACCESS_TOKEN_SECRET}
security.token.access.expiry-length=${ACCESS_TOKEN_EXPIRY}
security.token.refresh.secret-key=${REFRESH_TOKEN_SECRET}
security.token.refresh.expiry-length=${REFRESH_TOKEN_EXPIRY}

##CORS CONFIG
cors.allowed-credential=${CORS_ALLOW}
cors.allowed-origins =${CORS_ORIGIN}
cors.allowed-headers= ${CORS_HEADERS}
cors.allowed-methods = ${CORS_METHODS}


##PAYSTACK CONFIGURATION
paystack.secret-key = ${PAY_STACK_KEY}
paystack.initialize-payment-url = ${PAY_STACK_PAYMENT_URL}
paystack.call-back-url = ${PAY_STACK_CALLBACK_URL}
paystack.verification-url = ${PAY_STACK_VERIFICATION_URL}


## Enable detailed validation error messages
#server.error.include-message=always
#server.error.include-binding-errors=always
#server.error.include-stacktrace=never
#server.error.include-exception=false
#
## Optional: Customize validation messages
#spring.messages.basename=messages
#spring.messages.encoding=UTF-8
#
#NotBlank.customerRequest.firstName=First name is required
#NotBlank.customerRequest.lastName=Last name is required
#NotBlank.customerRequest.emailAddress=Email address is required
#Pattern.customerRequest.emailAddress=Please provide a valid email address
#Pattern.customerRequest.phoneNumber=Please provide a valid phone number
#NotBlank.customerRequest.password=Password is required
#ValidPassword.customerRequest.password=Password must meet complexity requirements

spring.jackson.deserialization.fail-on-unknown-properties=true
